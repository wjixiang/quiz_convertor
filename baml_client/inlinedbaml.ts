/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: do not edit it. Instead, edit the BAML
// files and re-generate this code.
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code
const fileMap = {
  
  "chunk_split.baml": "class Chunks {\n    question ContentSlice\n    answer ContentSlice\n}\n\nfunction SplitPage(parsedQuestionText: string, parsedAnswerText: string,  chunkNum:int) -> Chunks[] {\n    client GLM46\n    prompt #\"\n        {{_.role(\"user\")}}\n        You need to split a test paper into {{chunkNum}} chunks while maintaining the correspondence between questions and answers.\n\n        **CRITICAL REQUIREMENTS:**\n        1. NEVER split an individual question across chunks - each complete question with all its options must stay together\n        2. The corresponding answer for each question must be in the SAME chunk as the question\n        3. Maintain the original order of questions\n        4. Distribute questions as evenly as possible across chunks while respecting the above rules\n        5. Each chunk should contain a reasonable number of complete questions (not just 1-2 questions unless the paper is very small)\n\n        ===Questions with line numbers===\n        {{parsedQuestionText}}\n\n        ===Answers with line numbers===\n        {{parsedAnswerText}}\n\n        ===Instructions===\n        Analyze both the questions and answers together to determine optimal split points.\n        Return an array of objects with 'start' and 'end' indices for each chunk.\n        The indices should be based on the line numbers shown in the questions text.\n\n        Example format:\n        If questions 1-4 should be in chunk 1, questions 5-7 in chunk 2, and questions 8-10 in chunk 3:\n        [\n          {\"start\": 1, \"end\": 15},\n          {\"start\": 16, \"end\": 28},\n          {\"start\": 29, \"end\": 42}\n        ]\n\n        {{ ctx.output_format }}\n    \"#\n}",
  "clients.baml": "client<llm> GLM4Plus {\n  provider openai-generic\n  options {\n    model \"glm-4-plus\"\n    api_key env.GLM_API_KEY\n    base_url \"https://open.bigmodel.cn/api/paas/v4\"\n    retry_policy GLMRetry\n  }\n}\nclient<llm> GLM45Flash {\n  provider openai-generic\n  options {\n    model \"glm-4.5-flash\"\n    api_key env.GLM_API_KEY\n    base_url \"https://open.bigmodel.cn/api/paas/v4\"\n    retry_policy GLMRetry\n  }\n}\n\nclient<llm> GLM45Air {\n  provider openai-generic\n  options {\n    model \"glm-4.5-air\"\n    api_key env.GLM_API_KEY\n    base_url \"https://open.bigmodel.cn/api/paas/v4\"\n    retry_policy GLMRetry\n  }\n}\n\nclient<llm> GLM46 {\n  provider openai-generic\n  options {\n    model \"glm-4.6\"\n    api_key env.GLM_API_KEY\n    base_url \"https://open.bigmodel.cn/api/paas/v4\"\n    retry_policy GLMRetry\n  }\n}\n\n\n\n\nclient<llm> QiniuDeepseekV3 {\n  provider openai-generic\n  options {\n    model \"deepseek-v3\"\n    api_key env.QINIU_DEEPSEEK_FREE_API_KEY\n    base_url \"https://api.qnaigc.com/v1\"\n  }\n}\n\nclient<llm> GeminiFlash {\n  provider openai-generic\n  options {\n    model \"gemini-2.5-flash-preview-05-20\"\n    api_key env.SHENMA_API_KEY\n    base_url \"https://api.whatai.cc/v1\"\n  }\n}\n\nclient<llm> GeminiFlashOpenrouter {\n  provider openai-generic\n  options {\n    model \"google/gemini-2.5-pro\"\n    api_key env.OPENROUTER_API_KEY\n    base_url \"https://openrouter.ai/api/v1\"\n  }\n}\n\nclient<llm> Kimi {\n  provider openai-generic\n  options {\n    model \"kimi-k2-0905-preview\"\n    api_key env.KIMI_API_KEY\n    base_url \"https://api.moonshot.cn/v1\"\n  }\n}\n\nclient<llm> KimiK2Turbo {\n  provider openai-generic\n  options {\n    model \"kimi-k2-turbo-preview\"\n    api_key env.KIMI_API_KEY\n    base_url \"https://api.moonshot.cn/v1\"\n  }\n}\n\n\n",
  "generators.baml": "// This helps use auto generate libraries you can use in the language of\n// your choice. You can have multiple generators if you use multiple languages.\n// Just ensure that the output_dir is different for each generator.\ngenerator target {\n    // Valid values: \"python/pydantic\", \"typescript\", \"ruby/sorbet\", \"rest/openapi\"\n    output_type \"typescript\"\n\n    // Where the generated code will be saved (relative to baml_src/)\n    output_dir \"../\"\n\n    // The version of the BAML package you have installed (e.g. same version as your baml-py or @boundaryml/baml).\n    // The BAML VSCode extension version should also match this version.\n    version \"0.90.2\"\n\n    // Valid values: \"sync\", \"async\"\n    // This controls what `b.FunctionName()` will be (sync or async).\n    default_client_mode async\n}\n",
  "quiz.baml": "// Quiz conversion using LLM\nclass QuestionAnswerPair {\n  type \"single\" | \"multiple\" | \"share_question\" | \"share_option\"\n  question string\n  answer string\n}\n\nclass QuestionAnswerWithExplanationPair {\n  type \"single\" | \"multiple\" | \"share_question\" | \"share_option\"\n  question string\n  answer string\n  explanation string\n}\n\nclass QuestionAnswerSlice {\n  type \"single\" | \"multiple\" | \"share_question\" | \"share_option\"\n  question_range int[]\n  /// 正确答案的选项字母：\n  /// - 单选题：\"A\", \"B\", 等\n  /// - 多选题：\"AB\", \"ACD\", 等 (A-E的任意组合)\n  answer string\n}\n\nclass QuestionAnswerWithExplanationSlice {\n  type \"single\" | \"multiple\" | \"share_question\" | \"share_option\"\n  question_range int[]\n  answer_range int[]\n  answer string @description(#\"\n    正确答案的选项字母：\n    - 单选题：\"A\", \"B\", 等\n    - 多选题：\"AB\", \"ACD\", 等 (A-E的任意组合)\n  \"#)\n}\n\nclass ContentSlice {\n  start int\n  end int\n}\n\n\nclass QuizOptions {\n  oid \"A\"|\"B\"|\"C\"|\"D\"|\"E\"\n  text string\n}\n\nclass QuizAnalysis {\n  point string?\n  discuss string?\n  ai_analysis string?\n  link string[]\n}\n\nclass BasicQuiz {\n  type \"single\" | \"multiple\" | \"share_question\" | \"share_option\"\n  clas string @alias(\"class\")\n  question string\n  options string[]\n  answer string\n  explanation string? @description(#\"\n    可选：如果输入内容没有这部分内容，请跳过此字段\n  \"#)\n}\n\nclass QAunit {\n  question string\n  options QuizOptions[]\n  answer string @description(#\"\n    必须是 \"A\" | \"B\" | \"C\" | \"D\" | \"E\" 中的一个\n  \"#)\n}\n\nclass QAunitForB {\n  question string\n  answer string @description(#\"\n    必须是 \"A\" | \"B\" | \"C\" | \"D\" | \"E\" 中的一个\n  \"#)\n}\n\nclass A3PreQuiz {\n  clas string @alias(\"class\")\n  mainQuestion string\n  subQuestion QAunit[]\n  explanation string? @description(#\"\n    可选：如果输入内容没有这部分内容，请跳过此字段\n  \"#)\n}\n\nclass BPreQuiz {\n  clas string @alias(\"class\")\n  shared_options QuizOptions[]\n  questions QAunitForB[]\n  explanation string? @description(#\"\n    可选：如果输入内容没有这部分内容，请跳过此字段\n  \"#)\n}\n\n// class A1Quiz {\n//   type \"A1\"\n//   class string\n//   unit string\n//   tags string[]\n//   question string\n//   options QuizOptions[]\n//   answer \"A\"|\"B\"|\"C\"|\"D\"|\"E\"\n//   analysis QuizAnalysis\n//   source string\n// }\n\n// class A2Quiz {\n//   type \"A2\"\n//   class string\n//   unit string\n//   tags string[]\n//   question string\n//   options QuizOptions[]\n//   answer \"A\"|\"B\"|\"C\"|\"D\"|\"E\"\n//   analysis QuizAnalysis\n//   source string\n// }\n\nfunction SplitQuestions(questions_text: string) -> string[] {\n  client GLM45Air\n  prompt #\"\n    {{_.role(\"user\")}}\n    将以下文本分割成单独的问题。文本可能包含：\n    - 编号问题（1., 2., 等）\n    - 项目符号\n    - 问题之间的空行\n    - 其他分隔符\n    \n    要分割的文本：\n    {{ questions_text }}\n    \n    返回一个JSON数组，其中每个元素是一个完整的问题文本。\n    只返回数组，不要返回其他内容。\n  \"#\n}\n\n\n\nfunction ConvertToBasicQuiz(question: string, answer: string, explanation: string?) -> BasicQuiz {\n  client GLM45Air\n  prompt #\"\n    {{_.role(\"user\")}}\n    将以下问题和答案转换为简单的选择题（BasicQuiz类型）：\n    \n    问题：\n    {{ question }}\n    \n    答案：\n    {{ answer }}\n\n    解释：\n    {{ explanation }}\n    \n    要求：\n    - 根据答案格式将类型指定为\"single\"或\"multiple\"\n    - 只返回JSON对象，不要返回其他内容\n    - 答案必须是选项对应的大写字母标号\n    - 修正OCR识别的文字错误，移除与题目无关的信息（如目录、页码、机构信息）\n    - 根据试题内容，自行推断试题所属科目。试题所属科目必须是如下科目列表中的一个：\n      - 内科学\n      - 外科学\n      - 生理学\n      - 病理学\n      - 生物化学与分子生物学\n      - 人文精神\n    \n    {{ ctx.output_format }}\n  \"#\n}\n\nfunction ConvertToA3Quiz(question: string, answer: string, explanation: string?) -> A3PreQuiz {\n  client GLM45Air\n  prompt #\"\n    {{_.role(\"user\")}}\n    将以下问题和答案转换为包含多个问题的题组：\n    \n    问题：\n    {{ question }}\n    \n    答案：\n    {{ answer }}\n\n    解释：\n    {{ explanation }}\n    \n    要求：\n    - 根据答案格式将类型指定为\"single\"或\"multiple\"\n    - 只返回JSON对象，不要返回其他内容\n    - 答案必须是选项对应的大写字母标号\n    - 修正OCR识别的文字错误，移除与题目无关的信息（如目录、页码、机构信息）\n    - 根据试题内容，自行推断试题所属科目。试题所属科目必须是如下科目列表中的一个：\n      - 内科学\n      - 外科学\n      - 生理学\n      - 病理学\n      - 生物化学与分子生物学\n      - 人文精神\n\n    {{ ctx.output_format }}\n  \"#\n}\n\nfunction ConvertToBQuiz(question: string, answer: string, explanation: string?) -> BPreQuiz {\n  client GLM45Air\n  prompt #\"\n    {{_.role(\"user\")}}\n    将以下问题和答案转换为共享相同选项的题组：\n    \n    问题：\n    {{ question }}\n    \n    答案：\n    {{ answer }}\n\n    解释：\n    {{ explanation }}\n    \n    要求：\n    - 根据答案格式将类型指定为\"single\"或\"multiple\"\n    - 只返回JSON对象，不要返回其他内容\n    - 答案必须是选项对应的大写字母标号\n    - 修正OCR识别的文字错误，移除与题目无关的信息（如目录、页码、机构信息）\n    - - 根据试题内容，自行推断试题所属科目。试题所属科目必须是如下科目列表中的一个：\n      - 内科学\n      - 外科学\n      - 生理学\n      - 病理学\n      - 生物化学与分子生物学\n      - 人文精神\n    {{ ctx.output_format }}\n  \"#\n}\n\nclass SplitText {\n  questions string\n  answers string\n}\n\nfunction MatchQuestionsAnswers(input: SplitText) -> QuestionAnswerSlice[] {\n  client KimiK2Turbo\n  prompt #\"\n    {{_.role(\"user\")}}\n    使用分割点标记匹配以下问题和答案。\n\n    ---指令---\n    返回一个JSON数组，其中每个元素是一个包含以下内容的对象：\n    - type: 题目类型，必须是 \"single\" | \"multiple\" | \"share_question\" | \"share_option\" 中的一个\n    - question_range: 问题的 [起始索引, 结束索引]\n      - 为双侧闭合区间，即包含两端的索引，包含区间两端所指向行数的文本\n    - answer: 该题的正确选项字母 (A/B/C/D/E)\n      - 单选题：\"A\", \"B\", 等 (一个字母)\n      - 多选题：\"AB\", \"ACD\", 等 (字母的任意组合)\n      - 共用题干题 (share_question)：\n        - question_range 必须覆盖整个问题组。这类题目通常有 \"A3\", \"A3型题\", \"共用题干\" 等标识。\n        - 用正确的索引显示每个子问题的答案：\"1.A 2.B 3.C 等\"\n      - 共用选项题 (share_option)：\n        - question_range 必须覆盖整个问题组。这类题目通常有 \"B\", \"B型题\", \"共用选项\" 等标识。\n        - 用正确的索引显示每个子问题的答案：\"1.A 2.B 3.C 等\"\n      - 确保所有字母都是大写并按字母顺序排列 (例如 \"ABD\" 而不是 \"BAD\")\n    \n    ---示例：共用题干题---\n    (78~80题共用题干)男性，62岁。近3个月消瘦、乏力，有上腹胀痛，近1个月出现巩膜及周身黄染，进行性加重，1周前出现大便灰白，尿色深，周身瘙痒，轻度贫血。\n    78.病史中哪项对考虑梗阻性黄疸最有意义\n    A.贫血 B.尿色深 C.瘙痒\n    D.灰白便 E.腹胀痛\n    79.以下查体所见哪项对梗阻性黄疸更有意义\n    A.体温37.5℃ B.肝肋下2cm C.胆囊大无触痛\n    D.有上腹部深压痛 E.肝区有叩痛\n    80.B超示：肝内胆管轻度扩张，胆囊8cm×10cm×6cm,胆总管上段直径为1.5cm,胆总管\n    中下段因肠积气看不清，胰头3cm×4cm,胰管0.2cm,为了解胆总管中下段情况选哪项检查\n    最合适\n    A. CT B. PTC C. PTCD\n    D. ERCP E.十二指肠低张造影\n\n    ---示例：共用选项题---\n    A.良性肿瘤 B.恶性肿瘤 C.潜在恶性肿瘤\n    D.瘤样病损 E.转移性骨肿瘤\n    72.骨样骨瘤属于\n    73.骨巨细胞瘤属于\n    74.脊索瘤属于\n\n    ---规则---\n    根据问题在分割点数组中的位置匹配问题和答案。\n    将答案文本转换为相应的选项字母。\n    只返回数组，不要返回其他内容。\n    只返回问题和答案都存在的完整题目。\n    必须确保问题/选项/答案的内容与输入文本相同。\n\n    ---任务---\n    问题（带分割标记）：\n    {{ input.questions }}\n    \n    答案（带分割标记）：\n    {{ input.answers }}\n\n    ---输出---\n    {{ ctx.output_format }}\n  \"#\n}\n\nfunction MatchQuestionsAnswersWithExplanation(input: SplitText) -> QuestionAnswerWithExplanationSlice[] {\n  client KimiK2Turbo\n  prompt #\"\n    {{_.role(\"user\")}}\n    使用分割点标记匹配以下问题和答案。\n\n    ---指令---\n    返回一个JSON数组，其中每个元素是一个包含以下内容的对象：\n    - type: 题目类型，必须是 \"single\" | \"multiple\" | \"share_question\" | \"share_option\" 中的一个\n    - question_range: 问题的 [起始索引, 结束索引]\n      - 为双侧闭合区间，即包含两端的索引，包含区间两端所指向行数的文本\n    - answer_range: 解释的 [起始索引, 结束索引]\n    - answer: 该题的正确选项字母 (A/B/C/D/E)\n      - 单选题：\"A\", \"B\", 等 (一个字母)\n      - 多选题：\"AB\", \"ACD\", 等 (字母的任意组合)\n      - 共用题干题 (share_question)：\n        - question_range 必须覆盖整个问题组。这类题目通常有 \"A3\", \"A3型题\", \"共用题干\" 等标识。\n        - 用正确的索引显示每个子问题的答案：\"1.A 2.B 3.C 等\"\n      - 共用选项题 (share_option)：\n        - question_range 必须覆盖整个问题组。这类题目通常有 \"B\", \"B型题\", \"共用选项\" 等标识。\n        - 用正确的索引显示每个子问题的答案：\"1.A 2.B 3.C 等\"\n      - 确保所有字母都是大写并按字母顺序排列 (例如 \"ABD\" 而不是 \"BAD\")\n\n    \n    ---示例：共用题干题---\n    (78~80题共用题干)男性，62岁。近3个月消瘦、乏力，有上腹胀痛，近1个月出现巩膜及周身黄染，进行性加重，1周前出现大便灰白，尿色深，周身瘙痒，轻度贫血。\n    78.病史中哪项对考虑梗阻性黄疸最有意义\n    A.贫血 B.尿色深 C.瘙痒\n    D.灰白便 E.腹胀痛\n    79.以下查体所见哪项对梗阻性黄疸更有意义\n    A.体温37.5℃ B.肝肋下2cm C.胆囊大无触痛\n    D.有上腹部深压痛 E.肝区有叩痛\n    80.B超示：肝内胆管轻度扩张，胆囊8cm×10cm×6cm,胆总管上段直径为1.5cm,胆总管\n    中下段因肠积气看不清，胰头3cm×4cm,胰管0.2cm,为了解胆总管中下段情况选哪项检查\n    最合适\n    A. CT B. PTC C. PTCD\n    D. ERCP E.十二指肠低张造影\n\n    ---示例：共用选项题---\n    A.良性肿瘤 B.恶性肿瘤 C.潜在恶性肿瘤\n    D.瘤样病损 E.转移性骨肿瘤\n    72.骨样骨瘤属于\n    73.骨巨细胞瘤属于\n    74.脊索瘤属于\n\n    ---规则---\n    根据问题在分割点数组中的位置匹配问题和答案。\n    将答案文本转换为相应的选项字母。\n    只返回数组，不要返回其他内容。\n    只返回问题和答案都存在的完整题目。\n    必须确保问题/选项/答案的内容与输入文本相同。\n\n    ---任务---\n    问题（带分割标记）：\n    {{ input.questions }}\n    \n    答案（带分割标记）：\n    {{ input.answers }}\n\n    ---输出---\n    {{ ctx.output_format }}\n  \"#\n}\n\n",
  "resume.baml": "// Defining a data model.\nclass Resume {\n  name string\n  email string\n  experience string[]\n  skills string[]\n}\n\n// Create a function to extract the resume from a string.\nfunction ExtractResume(resume: string) -> Resume {\n  // Specify a client as provider/model-name\n  // you can use custom LLM params with a custom client name from clients.baml like \"client CustomHaiku\"\n  client GLM4Plus // Set OPENAI_API_KEY to use this client.\n  prompt #\"\n    {{_.role(\"user\")}}\n\n    Extract from this content:\n    {{ resume }}\n\n    {{ ctx.output_format }}\n  \"#\n}\n\n\n\n// Test the function with a sample resume. Open the VSCode playground to run this.\ntest vaibhav_resume {\n  functions [ExtractResume]\n  args {\n    resume #\"\n      Vaibhav Gupta\n      vbv@boundaryml.com\n\n      Experience:\n      - Founder at BoundaryML\n      - CV Engineer at Google\n      - CV Engineer at Microsoft\n\n      Skills:\n      - Rust\n      - C++\n    \"#\n  }\n}\n",
}
export const getBamlFiles = () => {
    return fileMap;
}